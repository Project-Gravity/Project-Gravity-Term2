// Bump map vertex program, support for this is required
vertex_program BumpMapVP cg
{
	source Platform_BumpMapping.cg
	entry_point main_vp
	profiles vs_1_1 arbvp1
}

// Bump map vertex program, with tangent parity support for this is required
vertex_program BumpMapVPTangentParity cg
{
	source Platform_BumpMapping.cg
	entry_point main_vp
	profiles vs_1_1 arbvp1
	compile_arguments -DTANGENTS_HAVE_PARITY=1
}

// Bump map fragment program, support for this is optional
fragment_program BumpMapFP cg
{
	source Platform_BumpMapping.cg
	entry_point main_fp
	profiles ps_2_0 arbfp1
}

// Bump map vertex program shadow receiver
vertex_program BumpMapVPShadowRcv cg
{
	source Platform_BumpMapping.cg
	entry_point main_shadowreceiver_vp
	profiles vs_1_1 arbvp1
}
// Bump map fragment program shadow receiver, support for this is optional
fragment_program BumpMapFPShadowRcv cg
{
	source Platform_BumpMapping.cg
	entry_point main_shadowreceiver_fp
	profiles ps_2_0 arbfp1
}


// Bump map with specular vertex program, support for this is required
vertex_program BumpMapVPSpecular cg
{
	source Platform_BumpMapping.cg
	entry_point specular_vp
	profiles vs_1_1 arbvp1
}

// Bump map fragment program, support for this is optional
fragment_program BumpMapFPSpecular cg
{
	source Platform_BumpMapping.cg
	entry_point specular_fp
	profiles ps_2_0 arbfp1
}

// Any number of lights, diffuse
material Platform
{
	receive_shadows off
	// This is the preferred technique which uses both vertex and
	// fragment programs, supports coloured lights
	technique
	{

		// Decal pass
		pass decal
		{

  //          ambient 1 1 1
   //         diffuse 1 1 1
   //         specular 1.0 1.0 1.0 100
//		 emissive 1 1 1 
            	 shading gouraud
			scene_blend alpha_blend

			// Vertex program reference
			vertex_program_ref BumpMapVP
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
			}

			// Fragment program
			fragment_program_ref BumpMapFP
			{
				param_named_auto lightDiffuse light_diffuse_colour 0 
				param_named_auto ambient ambient_light_colour
			}

			// texture shadow receiver program
			shadow_receiver_vertex_program_ref Examples/BumpMapVPShadowRcv
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
				param_named_auto worldMatrix world_matrix
				param_named_auto texViewProj texture_viewproj_matrix
			}
			// Additive texture shadow receiver program
			shadow_receiver_fragment_program_ref Examples/BumpMapFPShadowRcv
			{
				param_named_auto lightDiffuse light_diffuse_colour 0 
			}
			// Base bump map
			texture_unit normalMap
			{
				texture PlatformNormal.dds
				tex_coord_set 0
				//colour_op replace

			}
			texture_unit alphaMap
			{
				texture Platform.png
				tex_coord_set 1
				//colour_op add
			}
		}
	}
}

material WallUp
{
	receive_shadows off
	// This is the preferred technique which uses both vertex and
	// fragment programs, supports coloured lights
	technique
	{
		pass
		{
			scene_blend alpha_blend
			texture_unit 
			{
				texture WallUp.png
			}
		}
		// Decal pass
		pass decal
		{

            ambient 1 1 1
            diffuse 1 1 1
            specular 1.0 1.0 1.0 100
		 emissive 1 1 1 
            	 shading gouraud
			scene_blend alpha_blend
			depth_bias 5

			// Vertex program reference
			vertex_program_ref BumpMapVP
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
			}

			// Fragment program
			fragment_program_ref BumpMapFP
			{
				param_named_auto lightDiffuse light_diffuse_colour 0
				param_named_auto ambient ambient_light_colour
			}

			// texture shadow receiver program
			shadow_receiver_vertex_program_ref Examples/BumpMapVPShadowRcv
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
				param_named_auto worldMatrix world_matrix
				param_named_auto texViewProj texture_viewproj_matrix
			}
			// Additive texture shadow receiver program
			shadow_receiver_fragment_program_ref Examples/BumpMapFPShadowRcv
			{
				param_named_auto lightDiffuse light_diffuse_colour 0
			}
			// Base bump map
			texture_unit normalMap
			{
				texture WallNormal.dds
				tex_coord_set 0
				//colour_op replace

			}
			texture_unit alphaMap
			{
				texture Wall.png
				tex_coord_set 1
				//colour_op add
			}
		}
	}
	technique
	{
		scheme upLightOn

		pass
		{
			scene_blend alpha_blend
			texture_unit 
			{
				texture WallUp.png
			}
		}
		// Decal pass
		pass decal
		{

            ambient 1 1 1
            diffuse 1 1 1
            specular 1.0 1.0 1.0 100
		 emissive 1 1 1 
            	 shading gouraud
			scene_blend alpha_blend
			depth_bias 5

			// Vertex program reference
			vertex_program_ref BumpMapVP
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
			}

			// Fragment program
			fragment_program_ref BumpMapFP
			{
				param_named_auto lightDiffuse light_diffuse_colour 0
				param_named_auto ambient ambient_light_colour
			}

			// texture shadow receiver program
			shadow_receiver_vertex_program_ref Examples/BumpMapVPShadowRcv
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
				param_named_auto worldMatrix world_matrix
				param_named_auto texViewProj texture_viewproj_matrix
			}
			// Additive texture shadow receiver program
			shadow_receiver_fragment_program_ref Examples/BumpMapFPShadowRcv
			{
				param_named_auto lightDiffuse light_diffuse_colour 0
			}
			// Base bump map
			texture_unit normalMap
			{
				texture WallUpNormal.dds
				tex_coord_set 0
				//colour_op replace

			}
			texture_unit alphaMap
			{
				texture WallUpArrow.png
				tex_coord_set 1
				//colour_op add
			}
		}
	}
	technique
	{
		scheme lightOff
		pass
		{
			scene_blend alpha_blend
			texture_unit 
			{
				texture WallUp.png
			}
		}
		// Decal pass
		pass decal
		{

            ambient 1 1 1
            diffuse 1 1 1
            specular 1.0 1.0 1.0 100
		 emissive 1 1 1 
            	 shading gouraud
			scene_blend alpha_blend
			depth_bias 5

			// Vertex program reference
			vertex_program_ref BumpMapVP
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
			}

			// Fragment program
			fragment_program_ref BumpMapFP
			{
				param_named_auto lightDiffuse light_diffuse_colour 0
				param_named_auto ambient ambient_light_colour
			}

			// texture shadow receiver program
			shadow_receiver_vertex_program_ref Examples/BumpMapVPShadowRcv
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
				param_named_auto worldMatrix world_matrix
				param_named_auto texViewProj texture_viewproj_matrix
			}
			// Additive texture shadow receiver program
			shadow_receiver_fragment_program_ref Examples/BumpMapFPShadowRcv
			{
				param_named_auto lightDiffuse light_diffuse_colour 0
			}
			// Base bump map
			texture_unit normalMap
			{
				texture WallNormal.dds
				tex_coord_set 0
				//colour_op replace

			}
			texture_unit alphaMap
			{
				texture Wall.png
				tex_coord_set 1
				//colour_op add
			}
		}
	}
	technique 
	{
		scheme downLightOn
		pass
		{
			scene_blend alpha_blend
			texture_unit 
			{
				texture WallUp.png
			}
		}
		// Decal pass
		pass decal
		{

            ambient 1 1 1
            diffuse 1 1 1
            specular 1.0 1.0 1.0 100
		 emissive 1 1 1 
            	 shading gouraud
			scene_blend alpha_blend
			depth_bias 5

			// Vertex program reference
			vertex_program_ref BumpMapVP
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
			}

			// Fragment program
			fragment_program_ref BumpMapFP
			{
				param_named_auto lightDiffuse light_diffuse_colour 0
				param_named_auto ambient ambient_light_colour
			}

			// texture shadow receiver program
			shadow_receiver_vertex_program_ref Examples/BumpMapVPShadowRcv
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
				param_named_auto worldMatrix world_matrix
				param_named_auto texViewProj texture_viewproj_matrix
			}
			// Additive texture shadow receiver program
			shadow_receiver_fragment_program_ref Examples/BumpMapFPShadowRcv
			{
				param_named_auto lightDiffuse light_diffuse_colour 0
			}
			// Base bump map
			texture_unit normalMap
			{
				texture WallNormal.dds
				tex_coord_set 0
				//colour_op replace

			}
			texture_unit alphaMap
			{
				texture Wall.png
				tex_coord_set 1
				//colour_op add
			}
		}
	}
}

material WallDown
{
	
	receive_shadows off
	// This is the preferred technique which uses both vertex and
	// fragment programs, supports coloured lights
	technique 
	{
		pass
		{
			scene_blend alpha_blend
			texture_unit 
			{
				texture WallDown.png
			}
		}
		// Decal pass
		pass decal
		{

            ambient 1 1 1
            diffuse 1 1 1
            specular 1.0 1.0 1.0 100
		 emissive 1 1 1 
            	 shading gouraud
			scene_blend alpha_blend
			depth_bias 5

			// Vertex program reference
			vertex_program_ref BumpMapVP
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
			}

			// Fragment program
			fragment_program_ref BumpMapFP
			{
				param_named_auto lightDiffuse light_diffuse_colour 0
				param_named_auto ambient ambient_light_colour
			}

			// texture shadow receiver program
			shadow_receiver_vertex_program_ref Examples/BumpMapVPShadowRcv
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
				param_named_auto worldMatrix world_matrix
				param_named_auto texViewProj texture_viewproj_matrix
			}
			// Additive texture shadow receiver program
			shadow_receiver_fragment_program_ref Examples/BumpMapFPShadowRcv
			{
				param_named_auto lightDiffuse light_diffuse_colour 0
			}
			// Base bump map
			texture_unit normalMap
			{
				texture WallNormal.dds
				tex_coord_set 0
				//colour_op replace

			}
			texture_unit alphaMap
			{
				texture Wall.png
				tex_coord_set 1
				//colour_op add
			}
		}
	}
	technique
	{
		scheme downLightOn

		pass
		{
			scene_blend alpha_blend
			texture_unit 
			{
				texture WallDown.png
			}
		}
		// Decal pass
		pass decal
		{

            ambient 1 1 1
            diffuse 1 1 1
            specular 1.0 1.0 1.0 100
		 emissive 1 1 1 
            	 shading gouraud
			scene_blend alpha_blend
			depth_bias 5

			// Vertex program reference
			vertex_program_ref BumpMapVP
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
			}

			// Fragment program
			fragment_program_ref BumpMapFP
			{
				param_named_auto lightDiffuse light_diffuse_colour 0
				param_named_auto ambient ambient_light_colour
			}

			// texture shadow receiver program
			shadow_receiver_vertex_program_ref Examples/BumpMapVPShadowRcv
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
				param_named_auto worldMatrix world_matrix
				param_named_auto texViewProj texture_viewproj_matrix
			}
			// Additive texture shadow receiver program
			shadow_receiver_fragment_program_ref Examples/BumpMapFPShadowRcv
			{
				param_named_auto lightDiffuse light_diffuse_colour 0
			}
			// Base bump map
			texture_unit normalMap
			{
				texture WallDownNormal.dds
				tex_coord_set 0
				//colour_op replace

			}
			texture_unit alphaMap
			{
				texture WallDownArrow.png
				tex_coord_set 1
				//colour_op add
			}
		}
	}
	technique 
	{
		scheme lightOff
		pass
		{
			scene_blend alpha_blend
			texture_unit 
			{
				texture WallDown.png
			}
		}
		// Decal pass
		pass decal
		{

            ambient 1 1 1
            diffuse 1 1 1
            specular 1.0 1.0 1.0 100
		 emissive 1 1 1 
            	 shading gouraud
			scene_blend alpha_blend
			depth_bias 5

			// Vertex program reference
			vertex_program_ref BumpMapVP
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
			}

			// Fragment program
			fragment_program_ref BumpMapFP
			{
				param_named_auto lightDiffuse light_diffuse_colour 0
				param_named_auto ambient ambient_light_colour
			}

			// texture shadow receiver program
			shadow_receiver_vertex_program_ref Examples/BumpMapVPShadowRcv
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
				param_named_auto worldMatrix world_matrix
				param_named_auto texViewProj texture_viewproj_matrix
			}
			// Additive texture shadow receiver program
			shadow_receiver_fragment_program_ref Examples/BumpMapFPShadowRcv
			{
				param_named_auto lightDiffuse light_diffuse_colour 0
			}
			// Base bump map
			texture_unit normalMap
			{
				texture WallNormal.dds
				tex_coord_set 0
				//colour_op replace

			}
			texture_unit alphaMap
			{
				texture Wall.png
				tex_coord_set 1
				//colour_op add
			}
		}
	}
	technique 
	{
		scheme upLightOn
		pass
		{
			scene_blend alpha_blend
			texture_unit 
			{
				texture WallDown.png
			}
		}
		// Decal pass
		pass decal
		{

            ambient 1 1 1
            diffuse 1 1 1
            specular 1.0 1.0 1.0 100
		 emissive 1 1 1 
            	 shading gouraud
			scene_blend alpha_blend
			depth_bias 5

			// Vertex program reference
			vertex_program_ref BumpMapVP
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
			}

			// Fragment program
			fragment_program_ref BumpMapFP
			{
				param_named_auto lightDiffuse light_diffuse_colour 0
				param_named_auto ambient ambient_light_colour
			}

			// texture shadow receiver program
			shadow_receiver_vertex_program_ref Examples/BumpMapVPShadowRcv
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
				param_named_auto worldMatrix world_matrix
				param_named_auto texViewProj texture_viewproj_matrix
			}
			// Additive texture shadow receiver program
			shadow_receiver_fragment_program_ref Examples/BumpMapFPShadowRcv
			{
				param_named_auto lightDiffuse light_diffuse_colour 0
			}
			// Base bump map
			texture_unit normalMap
			{
				texture WallNormal.dds
				tex_coord_set 0
				//colour_op replace

			}
			texture_unit alphaMap
			{
				texture Wall.png
				tex_coord_set 1
				//colour_op add
			}
		}
	}

}

material PlatformBottom
{
	receive_shadows off
	// This is the preferred technique which uses both vertex and
	// fragment programs, supports coloured lights
	technique
	{

		// Decal pass
		pass decal
		{

            ambient 1 1 1
            diffuse 1 1 1
            specular 1.0 1.0 1.0 255
		 emissive 1 1 1 
            	 shading gouraud
			scene_blend alpha_blend

			// Vertex program reference
			vertex_program_ref BumpMapVP
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
			}

			// Fragment program
			fragment_program_ref BumpMapFP
			{
				param_named_auto lightDiffuse light_diffuse_colour 0
				param_named_auto ambient ambient_light_colour
			}

			// texture shadow receiver program
			shadow_receiver_vertex_program_ref Examples/BumpMapVPShadowRcv
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
				param_named_auto worldMatrix world_matrix
				param_named_auto texViewProj texture_viewproj_matrix
			}
			// Additive texture shadow receiver program
			shadow_receiver_fragment_program_ref Examples/BumpMapFPShadowRcv
			{
				param_named_auto lightDiffuse light_diffuse_colour 0
			}
			// Base bump map
			texture_unit normalMap
			{
				texture PlatformBottomNormal.dds
				tex_coord_set 0
				//colour_op replace

			}
			texture_unit alphaMap
			{
				texture PlatformBottom.png
				tex_coord_set 1
				//colour_op add
			}
		}
	}
}

material Sides
{
	receive_shadows off
	// This is the preferred technique which uses both vertex and
	// fragment programs, supports coloured lights
	technique
	{

		// Decal pass
		pass decal
		{

            ambient 1 1 1
            diffuse 1 1 1
            specular 1.0 1.0 1.0 255
		 emissive 1 1 1 
            	 shading gouraud
			scene_blend alpha_blend

			// Vertex program reference
			vertex_program_ref BumpMapVP
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
			}

			// Fragment program
			fragment_program_ref BumpMapFP
			{
				param_named_auto lightDiffuse light_diffuse_colour 0
				param_named_auto ambient ambient_light_colour
			}

			// texture shadow receiver program
			shadow_receiver_vertex_program_ref Examples/BumpMapVPShadowRcv
			{
				param_named_auto lightPosition light_position_object_space 0
				param_named_auto worldViewProj worldviewproj_matrix
				param_named_auto worldMatrix world_matrix
				param_named_auto texViewProj texture_viewproj_matrix
			}
			// Additive texture shadow receiver program
			shadow_receiver_fragment_program_ref Examples/BumpMapFPShadowRcv
			{
				param_named_auto lightDiffuse light_diffuse_colour 0
			}
			// Base bump map
			texture_unit normalMap
			{
				texture SidesNormal.dds
				tex_coord_set 0
				//colour_op replace

			}
			texture_unit alphaMap
			{
				texture Sides.png
				tex_coord_set 1
				//colour_op add
			}
		}
	}
}